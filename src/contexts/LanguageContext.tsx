"use client";

import React, { createContext, useContext, useState, useEffect } from 'react';

type Language = 'en' | 'de' | 'ro' | 'ru';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | null>(null);

// Basic translations for key UI elements
const translations = {
  en: {
    'nav.dashboard': 'Dashboard',
    'nav.poses': 'Pose Library',
    'nav.flows': 'Create Flow',
    'nav.ai-guide': 'AI Guide',
    'nav.manual': 'Manual',
    'nav.meditation': 'Meditation',
    'nav.about': 'About',
    'nav.pricing': 'Pricing',
    'nav.contact': 'Contact',
    'hero.title': 'Welcome to Yoga Flow University',
    'hero.subtitle': 'Create personalized yoga flows with AI assistance, track your practice, and grow your teaching skills in our comprehensive platform.',
    'cta.start-creating': 'Start Creating Flows',
    'cta.explore-poses': 'Explore Pose Library',
    'cta.try-meditation': 'Try Meditation',
    'footer.made-with-love': 'Made with üíô for the yoga community',
    'footer.carbon-neutral': 'Carbon neutral hosting'
  },
  de: {
    'nav.dashboard': 'Dashboard',
    'nav.poses': 'Asana-Bibliothek',
    'nav.flows': 'Flow Erstellen',
    'nav.ai-guide': 'KI-Guide',
    'nav.manual': 'Handbuch',
    'nav.meditation': 'Meditation',
    'nav.about': '√úber uns',
    'nav.pricing': 'Preise',
    'nav.contact': 'Kontakt',
    'hero.title': 'Willkommen bei Yoga Flow University',
    'hero.subtitle': 'Erstelle personalisierte Yoga-Flows mit KI-Unterst√ºtzung, verfolge deine Praxis und entwickle deine Unterrichtsf√§higkeiten auf unserer umfassenden Plattform.',
    'cta.start-creating': 'Flows Erstellen',
    'cta.explore-poses': 'Asanas Erkunden',
    'cta.try-meditation': 'Meditation Ausprobieren',
    'footer.made-with-love': 'Mit üíô f√ºr die Yoga-Gemeinschaft gemacht',
    'footer.carbon-neutral': 'Klimaneutrales Hosting'
  },
  ro: {
    'nav.dashboard': 'Tablou de bord',
    'nav.poses': 'Biblioteca de posturi',
    'nav.flows': 'CreeazƒÉ flux',
    'nav.ai-guide': 'Ghid AI',
    'nav.manual': 'Manual',
    'nav.meditation': 'Medita»õie',
    'nav.about': 'Despre noi',
    'nav.pricing': 'Pre»õuri',
    'nav.contact': 'Contact',
    'hero.title': 'Bun venit la Yoga Flow University',
    'hero.subtitle': 'CreeazƒÉ fluxuri de yoga personalizate cu asisten»õƒÉ AI, urmƒÉre»ôte-»õi practica »ôi dezvoltƒÉ-»õi abilitƒÉ»õile de predare pe platforma noastrƒÉ cuprinzƒÉtoare.',
    'cta.start-creating': '√éncepe sƒÉ creezi fluxuri',
    'cta.explore-poses': 'ExploreazƒÉ posturile',
    'cta.try-meditation': '√éncearcƒÉ medita»õia',
    'footer.made-with-love': 'FƒÉcut cu üíô pentru comunitatea de yoga',
    'footer.carbon-neutral': 'Hosting neutru din punct de vedere al carbonului'
  },
  ru: {
    'nav.dashboard': '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
    'nav.poses': '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–æ–∑',
    'nav.flows': '–°–æ–∑–¥–∞—Ç—å –ø–æ—Ç–æ–∫',
    'nav.ai-guide': '–ò–ò-–≥–∏–¥',
    'nav.manual': '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
    'nav.meditation': '–ú–µ–¥–∏—Ç–∞—Ü–∏—è',
    'nav.about': '–û –Ω–∞—Å',
    'nav.pricing': '–¶–µ–Ω—ã',
    'nav.contact': '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
    'hero.title': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Yoga Flow University',
    'hero.subtitle': '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –π–æ–≥–∞-–ø–æ—Ç–æ–∫–∏ —Å –ø–æ–º–æ—â—å—é –ò–ò, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ—é –ø—Ä–∞–∫—Ç–∏–∫—É –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –Ω–∞ –Ω–∞—à–µ–π –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.',
    'cta.start-creating': '–ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤',
    'cta.explore-poses': '–ò–∑—É—á–∏—Ç—å –ø–æ–∑—ã',
    'cta.try-meditation': '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –º–µ–¥–∏—Ç–∞—Ü–∏—é',
    'footer.made-with-love': '–°–¥–µ–ª–∞–Ω–æ —Å üíô –¥–ª—è –π–æ–≥–∞-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
    'footer.carbon-neutral': '–£–≥–ª–µ—Ä–æ–¥–Ω–æ-–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥'
  }
};

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguageState] = useState<Language>('en');

  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') as Language;
    if (savedLanguage && Object.keys(translations).includes(savedLanguage)) {
      setLanguageState(savedLanguage);
    }
  }, []);

  const setLanguage = (lang: Language) => {
    setLanguageState(lang);
    localStorage.setItem('language', lang);
  };

  const t = (key: string): string => {
    return translations[language]?.[key as keyof typeof translations['en']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};